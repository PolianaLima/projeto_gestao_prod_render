import React, {useEffect, useState} from 'react';
import Link from "next/link";
import Head from "next/head";
import {getReceitasData} from "@/utils/getReceitas";
import { useRouter } from 'next/router';
import ReceitaItem from "@/components/componentes_financeiro/ReceitaItem";
import ReceitaItemMobile from "@/components/componentes_financeiro/ReceitaItemMobile";


function Index() {
    const [receitas, setReceitas] = useState([]);
    const router = useRouter();

    useEffect(() => {
        const getData = async () => {
            try {
                const receitasData = await getReceitasData();
                setReceitas(receitasData);
            } catch (error) {
                console.error("Erro ao buscar dados", error);
            }
        };

        getData();
    }, []);

   const receitasOrder = receitas.sort((v1, v2)=>{
        if (v1.data_vencimento < v2.data_vencimento) {
            return -1;
        }
        if (v1.data_vencimento > v2.data_vencimento) {
            return 1;
        }
        return 0;
   });

    const totalReceitas = receitasOrder.reduce((acc, receita) => acc + receita.valor, 0);

    return (
        <>
            <Head>
                <title>SGME - Lista de contas a receber</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>

            </Head>
            <main className="container">
                <div className="container d-flex flex-row justify-content-between mb-3">
                    <h3>Contas a Receber</h3>
                    <Link href="/gestao-sgme/financeiro/contas-a-receber/cadastro" className="btn btn-success rounded-5">+
                    </Link>
                </div>

                <div className="overflow-x-scroll  mb-5 desktop-styles-info-financeiro-table">
                    <table className="table">
                        <thead>
                        <tr className="border border-2 border-warning ">
                            <th scope="col">Cliente</th>
                            <th scope="col">Valor</th>
                            <th scope="col">Vencimento</th>
                            <th scope="col">Status</th>
                            <th scope="col" className=" d-flex justify-content-end">Ações</th>
                        </tr>
                        </thead>
                        <tbody>
                        {receitasOrder && receitasOrder.length > 0 ? (
                            receitas.map(receita => (
                                <ReceitaItem key={receita} receita={receita}/>
                            ))
                        ) : (
                            <tr>
                                <td colSpan="6">Nenhuma despesa encontrada.</td>
                            </tr>
                        )}

                        </tbody>

                        <tr>
                            <td colspan={4} className="fw-bold pt-3 ">Total</td>
                            <td className="text-end fw-bold pt-3">{totalReceitas.toLocaleString('pt-br',{
                                style: 'currency',
                                currency: 'BRL'
                            })}</td>
                        </tr>
                    </table>
                </div>

                <div className="overflow-x-scroll  mb-5 mobile-styles-info-financeiro-table">
                    <table className="table table-borderless">
                    <thead>
                        <tr>
                        <th scope="col" className="text-secondary ">Vencimento</th>
                        <th scope="col" className="text-secondary text-end ">Valor</th>
                    </tr>
                        </thead>
                        <tbody>
                        {receitasOrder && receitasOrder.length > 0 ? (
                            receitas.map(receita =>
                                <ReceitaItemMobile key={receita} receita={receita} />
                            )
                        ) : (
                            <tr>
                                <td colSpan="6">Nenhuma despesa encontrada.</td>
                            </tr>
                        )}
                        </tbody>

                        <tr>
                            <td className="fw-bold pt-3 ">Total</td>
                            <td className="text-end fw-bold pt-3">{totalReceitas.toLocaleString('pt-br', {
                                style: 'currency',
                                currency: 'BRL'
                            })}</td>
                        </tr>

                    </table>
                </div>
            </main>
        </>

    );
}

export default Index;