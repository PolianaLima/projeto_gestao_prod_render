import React, {useEffect, useState} from 'react';
import Link from "next/link";
import Head from "next/head";
import {getDespesasData} from "@/utils/getDespesas";
import DespesaItem from "@/components/componentes_financeiro/DespesaItem";
import DespesaItemMobile from "@/components/componentes_financeiro/DespesaItemMobile";

function Index(props) {

    const [despesas, setDespesas] = useState([]);
    useEffect(() => {
        const getData = async () => {
            try {
                const despesasData = await getDespesasData();
                setDespesas(despesasData);
            } catch (error) {
                console.error("Erro ao buscar dados", error);
            }
        };

        getData();
    }, []);

    const despesasOrdenada = despesas.sort((v1, v2) => {
        if (v1.data_vencimento < v2.data_vencimento) {
            return -1;
        }
        if (v1.data_vencimento > v2.data_vencimento) {
            return 1;
        }
        return 0;
    });

    const totalDespesa = despesasOrdenada.reduce((acc, despesa) => {
        return acc + despesa.valor;
    }, 0);

    return (
        <>
            <Head>
                <title>SGME-Contas a pagar</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className="container">
                <div className="container d-flex flex-row justify-content-between mb-3">
                    <h3>Contas a Pagar</h3>
                    <Link href="/gestao-sgme/financeiro/contas-a-pagar/cadastro" className="btn btn-success rounded-5">+</Link>
                </div>

                <div className="overflow-x-scroll mb-5 desktop-styles-info-financeiro-table">
                    <table className="table">
                        <thead>
                        <tr className="border border-2 border-warning">
                            <th scope="col">Fornecedor</th>
                            <th scope="col">Valor</th>
                            <th scope="col">Vencimento</th>
                            <th scope="col">Status</th>
                            <th scope="col" className=" d-flex justify-content-end">Ações</th>

                        </tr>
                        </thead>
                        <tbody>

                        {despesasOrdenada && despesasOrdenada.length > 0 ? (
                            despesasOrdenada.map(despesa => (
                                <DespesaItem key={despesa} despesa={despesa}/>
                            ))
                        ) : (
                            <tr>
                                <td colSpan="6">Nenhuma despesa encontrada.</td>
                            </tr>
                        )}

                        </tbody>

                        <tr>
                            <td colSpan={4} className="fw-bold pt-3">
                                Total
                            </td>
                            <td className="text-end fw-bold pt-3">
                                {totalDespesa.toLocaleString('pt-br', {
                                    style: 'currency',
                                    currency: 'BRL'
                                })}
                            </td>
                        </tr>
                    </table>
                </div>

                {/*MOBILE*/}
                <div className="overflow-x-scroll mb-5 mobile-styles-info-financeiro-table">
                    <table className="table table-borderless">
                        <thead>
                        <tr>
                            <th scope="col" className="text-secondary ">Vencimento</th>
                            <th scope="col" className="text-secondary text-end ">Valor</th>
                        </tr>
                        </thead>
                        <tbody>

                        {despesasOrdenada && despesasOrdenada.length > 0 ? (
                            despesasOrdenada.map(despesa => (
                                <DespesaItemMobile key={despesa} despesa={despesa}/>
                            ))
                        ) : (
                            <tr>
                                <td colSpan="6">Nenhuma despesa encontrada.</td>
                            </tr>
                        )}

                        </tbody>

                        <tr>
                            <td className="fw-bold pt-3">
                                Total
                            </td>
                            <td className="text-end fw-bold pt-3">
                                {totalDespesa.toLocaleString('pt-br', {
                                    style: 'currency',
                                    currency: 'BRL'
                                })}
                            </td>
                        </tr>
                    </table>
                </div>
            </main>
        </>

    );
}

export default Index;